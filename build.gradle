plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //id 'com.gorylenko.gradle-git-properties' version '2.4.0'
    id "com.palantir.docker" version "0.22.1"
    id 'java'
}

group = 'com.mk'
version = '1.0.0'
sourceCompatibility = "17"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories { mavenCentral() }

ext {
    set('springCloudVersion', "2021.0.4")
    set('mapstructVersion', "1.5.3.Final")
    set('xidVersion', "1.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
    implementation 'org.liquibase:liquibase-core'
    implementation 'com.vladmihalcea:hibernate-types-55:2.20.0'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation "com.github.0xshamil:java-xid:1.0.0"
    implementation 'io.vavr:vavr:0.10.4'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.zalando:jackson-datatype-money:1.3.0'

    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'org.apache.httpcomponents:httpclient'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'

}

dependencyManagement {
    imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" }
}

springBoot {
    // Add this properties to the actuator /info endpoint
    buildInfo {
        properties {
            artifact = rootProject.name
            version = version
            group = group
            name = 'Project Swordfish'
            additional = ['customKey': 'customValue']
        }
    }
}

processResources {
    // Similar than maven filtering plugin, has issues with spring variable reference ${}
    filesMatching('application-gradle.properties') {
        expand(project.properties)
    }
}

compileJava {
    options.compilerArgs += ['-Amapstruct.defaultComponentModel=spring']
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    name "${project.group}/${project.name}:${project.version}"
    files "$buildDir/libs/${project.name}-${project.version}.jar"
    dockerfile file("$projectDir/Dockerfile")
}

task npm_lint(type:Exec) {commandLine 'cmd', '/c', 'init.bat'}